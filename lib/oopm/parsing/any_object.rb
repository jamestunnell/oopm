# Autogenerated from a Treetop grammar. Edits may be lost.


module AnyObject
  include Treetop::Runtime

  def root
    @root ||= :any_object
  end

  include StringLiteral

  include Number

  include Name

  def _nt_any_object
    start_index = index
    if node_cache[:any_object].has_key?(index)
      cached = node_cache[:any_object][index]
      if cached
        cached = SyntaxNode.new(input, index...(index + 1)) if cached == true
        @index = cached.interval.end
      end
      return cached
    end

    i0 = index
    r1 = _nt_string_literal
    if r1
      r0 = r1
    else
      r2 = _nt_number
      if r2
        r0 = r2
      else
        r3 = _nt_name
        if r3
          r0 = r3
        else
          @index = i0
          r0 = nil
        end
      end
    end

    node_cache[:any_object][start_index] = r0

    r0
  end

end

class AnyObjectParser < Treetop::Runtime::CompiledParser
  include AnyObject
end

