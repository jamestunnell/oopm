module OOPM
module Parsing

grammar Expression
  include AnyObject
  
  rule expression
    binary_operation / method_call / grouped_expression / any_object
  end

  rule binary_operation
    left_operand:(method_call / grouped_expression / any_object)
    operation_chain:(
      whitespace*
      operator:binary_operator
      whitespace*
      right_operand:(method_call / grouped_expression / any_object)
    )+
    <BinaryOperationNode>
  end

  rule binary_operator
    "+" / "-" / "*" / "/" / "%" / "||" / "&&" / "==" / "=" / "|" / "&" / "<<"
  end
  
  rule method_call
    method_reciever:(grouped_expression / any_object)
    call_chain:(
      "."
      method_name:name
      method_args:(
        ("(" whitespace* args whitespace* ")") /
        ( "(" whitespace* ")" ) /
        ( whitespace* args whitespace* ) /
        ""
      )
    )+
    <MethodCallNode>
  end
  
  rule args
    first_arg:expression whitespace* more_args:("," whitespace* another_arg:expression whitespace*)*
  end

  rule grouped_expression
    "(" whitespace* expression whitespace* ")" <GroupedExpressionNode>
  end
  
  rule whitespace
    [\s]
  end
end

end
end