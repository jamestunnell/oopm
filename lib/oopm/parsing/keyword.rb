# Autogenerated from a Treetop grammar. Edits may be lost.


module OOPM
module Parsing

module Keyword
  include Treetop::Runtime

  def root
    @root ||= :keyword
  end

  def _nt_keyword
    start_index = index
    if node_cache[:keyword].has_key?(index)
      cached = node_cache[:keyword][index]
      if cached
        cached = SyntaxNode.new(input, index...(index + 1)) if cached == true
        @index = cached.interval.end
      end
      return cached
    end

    i0 = index
    if has_terminal?("ifels", false, index)
      r1 = instantiate_node(SyntaxNode,input, index...(index + 5))
      @index += 5
    else
      terminal_parse_failure("ifels")
      r1 = nil
    end
    if r1
      r0 = r1
    else
      if has_terminal?("if", false, index)
        r2 = instantiate_node(SyntaxNode,input, index...(index + 2))
        @index += 2
      else
        terminal_parse_failure("if")
        r2 = nil
      end
      if r2
        r0 = r2
      else
        if has_terminal?("end", false, index)
          r3 = instantiate_node(SyntaxNode,input, index...(index + 3))
          @index += 3
        else
          terminal_parse_failure("end")
          r3 = nil
        end
        if r3
          r0 = r3
        else
          if has_terminal?("def", false, index)
            r4 = instantiate_node(SyntaxNode,input, index...(index + 3))
            @index += 3
          else
            terminal_parse_failure("def")
            r4 = nil
          end
          if r4
            r0 = r4
          else
            if has_terminal?("class", false, index)
              r5 = instantiate_node(SyntaxNode,input, index...(index + 5))
              @index += 5
            else
              terminal_parse_failure("class")
              r5 = nil
            end
            if r5
              r0 = r5
            else
              if has_terminal?("module", false, index)
                r6 = instantiate_node(SyntaxNode,input, index...(index + 6))
                @index += 6
              else
                terminal_parse_failure("module")
                r6 = nil
              end
              if r6
                r0 = r6
              else
                if has_terminal?("then", false, index)
                  r7 = instantiate_node(SyntaxNode,input, index...(index + 4))
                  @index += 4
                else
                  terminal_parse_failure("then")
                  r7 = nil
                end
                if r7
                  r0 = r7
                else
                  if has_terminal?("unless", false, index)
                    r8 = instantiate_node(SyntaxNode,input, index...(index + 6))
                    @index += 6
                  else
                    terminal_parse_failure("unless")
                    r8 = nil
                  end
                  if r8
                    r0 = r8
                  else
                    if has_terminal?("raise", false, index)
                      r9 = instantiate_node(SyntaxNode,input, index...(index + 5))
                      @index += 5
                    else
                      terminal_parse_failure("raise")
                      r9 = nil
                    end
                    if r9
                      r0 = r9
                    else
                      if has_terminal?("return", false, index)
                        r10 = instantiate_node(SyntaxNode,input, index...(index + 6))
                        @index += 6
                      else
                        terminal_parse_failure("return")
                        r10 = nil
                      end
                      if r10
                        r0 = r10
                      else
                        if has_terminal?("do", false, index)
                          r11 = instantiate_node(SyntaxNode,input, index...(index + 2))
                          @index += 2
                        else
                          terminal_parse_failure("do")
                          r11 = nil
                        end
                        if r11
                          r0 = r11
                        else
                          if has_terminal?("else", false, index)
                            r12 = instantiate_node(SyntaxNode,input, index...(index + 4))
                            @index += 4
                          else
                            terminal_parse_failure("else")
                            r12 = nil
                          end
                          if r12
                            r0 = r12
                          else
                            if has_terminal?("require", false, index)
                              r13 = instantiate_node(SyntaxNode,input, index...(index + 7))
                              @index += 7
                            else
                              terminal_parse_failure("require")
                              r13 = nil
                            end
                            if r13
                              r0 = r13
                            else
                              if has_terminal?("include", false, index)
                                r14 = instantiate_node(SyntaxNode,input, index...(index + 7))
                                @index += 7
                              else
                                terminal_parse_failure("include")
                                r14 = nil
                              end
                              if r14
                                r0 = r14
                              else
                                @index = i0
                                r0 = nil
                              end
                            end
                          end
                        end
                      end
                    end
                  end
                end
              end
            end
          end
        end
      end
    end

    node_cache[:keyword][start_index] = r0

    r0
  end

end

class KeywordParser < Treetop::Runtime::CompiledParser
  include Keyword
end


end
end